{
    "url": "https://www.kickstarter.com/projects/1013562009/fipsy-fpga-v2-the-breakout-board-for-beginners-and-creatives/comments",
    "comments": [
        {
            "poster": "Mario Morales",
            "comment": "As someone with no FPGA experience.",
            "timestamp": "1741345997",
            "is_creator": false
        },
        {
            "poster": "Mario Morales",
            "comment": "Why would I want to learn to work with an FPGA?",
            "timestamp": "1741345997",
            "is_creator": false
        },
        {
            "poster": "Mario Morales",
            "comment": "What are some things I can do with this particular item.",
            "timestamp": "1741345997",
            "is_creator": false
        },
        {
            "poster": "Mario Morales",
            "comment": "Is there a cool project I can do with this and say software development (like a todo app or something I can code myself) ?",
            "timestamp": "1741345997",
            "is_creator": false
        },
        {
            "poster": "Matthew Zamora",
            "comment": "FPGAs give you the ability to learn about electronics at a lower level than microcontrollers. Imagine taking your ‘software-style’ algorithm and running it more quickly on dedicated logic circuits.",
            "timestamp": "1741655242",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "A really cool example is this VGA Pong demo, where you can combine both hardware and circuit design: https://www.fipsyfpga.com/learning/learning-projects/vga-pong/",
            "timestamp": "1741655242",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "We are working to add more examples, such as other educational game frameworks and HDMI protocol examples. Please take a look at the current list of example projects here: https://www.fipsyfpga.com/learning/learning-projects/",
            "timestamp": "1741655242",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "When you are building with FPGAs you are designing both the algorithm logic, and the hardware-level design. It’s very similar to building your own kind of CPU. You can do custom things better, for example many analog to digital signal processors use FPGAs because they can handle a stream of real-time information better than microcontrollers/CPUs. The Fipsy FPGA V2 plays well with other devices like the ESP32, and would let you build any IoT system you want.",
            "timestamp": "1741655242",
            "is_creator": true
        },
        {
            "poster": "Zzz",
            "comment": "You went with quite the long backing period for this campaign, any plans to potentially shorten that down at some point or start production early?",
            "timestamp": "1741256934",
            "is_creator": false
        },
        {
            "poster": "Matthew Zamora",
            "comment": "We are as excited as you are to get the Fipsy V2 in the hands of makers, learners and creatives! I want to be conservative with what we are committing to. During the launch of the original Fipsy V1, we were able to deliver a majority of the boards over a month ahead of schedule. But for now, we’ll stick to our stated timeline (and work behind the scenes to accelerate this as much as possible). One goal of this project is to introduce this to the market so folks never need to wait for ‘one-off’ campaigns again.",
            "timestamp": "1741653940",
            "is_creator": true
        },
        {
            "poster": "Zzz",
            "comment": "Okay, thanks, good luck",
            "timestamp": "1741659139",
            "is_creator": false
        },
        {
            "poster": "kickstarter_lint",
            "comment": "Wondering what this means. I want to learn more about fpga and understanding this would help me. Does it mean, 'on chip' or through some sort of gpio? or... something i dont know how to articulate. clarification appreciated.",
            "timestamp": "1740990500",
            "is_creator": false
        },
        {
            "poster": "Matthew Zamora",
            "comment": "When you work with electrical signals, you can have one or more wires carrying the data. These wires switch between ground and full voltage, representing the zeros and ones. Protocols are how data packets are sent over these wires, and stored on the chip. With microcontrollers, you usually have libraries that hide how the data actually flows. With an FPGA, you can better learn how these protocols actually work. The Fipsy FPGA V2 allows you to design data structures like registers and wires for on-chip storage and processing, while controlling the GPIO. Please take a look at the MIDI ‘module flow diagram’ on our Basic Theory educational page: https://www.fipsyfpga.com/learning/brief-theory/",
            "timestamp": "1741651369",
            "is_creator": true
        },
        {
            "poster": "Alan Campbell",
            "comment": "Stumbled on this and backed it. Looking at your website, you seem to push Lattice Diamond as the software back end. Last time I tried FPGAs it was Xilinx, and the software was - monstrous.",
            "timestamp": "1739840698",
            "is_creator": false
        },
        {
            "poster": "Alan Campbell",
            "comment": "I heard the Lattice chips are now supported by open source software. Is that an option? The software experience could make or break the FPGA learning process.",
            "timestamp": "1739840698",
            "is_creator": false
        },
        {
            "poster": "Matthew Zamora",
            "comment": "The Lattice Chip family that is best supported by Open Source IDEs to my knowledge are the iCE40 and ECP5 Chip Families. We are instead using the MachXO2 Family, which helps to keep the cost down for beginners. However, MachXO2 is not yet supported by the open source FPGA tool chains that I'm aware of yet. I bet if we can grow a bigger hobbyist FPGA community, that would change.",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "There are plans to get MachXO2 into the existing open source tools, but I'm not aware of anything other than Lattice Diamond for creating the final bitstream/.jed file. That said, you can create the Verilog in a wide range of IDEs (coding and compiling to a bit stream can be done in separate environments), and use Lattice Diamond (which is still free) for just the last compilation step.",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "The open source projects to look at are:",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "https://icestudio.io/ as an IDE and F4PGA as a bitstream compiler - https://f4pga.org/",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "If anybody knows of other Open Source products that play well with Lattice MachX02 Families (or HDL/Verilog generally) - please send me a DM and I'll update the documentation.",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "Thank you for being a backer, and helping to bring FPGAs to the general electronics community.",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "https://icestudio.io/",
            "timestamp": "1739848606",
            "is_creator": true
        },
        {
            "poster": "analog monster",
            "comment": "Hey, good luck with the project. I was just wondering whether you are going to provide many more code examples? Never really got very far with v1 because I was hoping for more tutorials especially around an hdmi board. I was a little disappointed with the v1 documentation so if this is successful I really hope you can create many more tutorials-after all the reason arduino did so well is they had good documentation backing up the hardware. Hope you get fully funded",
            "timestamp": "1739664790",
            "is_creator": false
        },
        {
            "poster": "Matthew Zamora",
            "comment": "That you for supporting us in the past, that's awesome! We are indeed on track to be fully funded, so that's nice too.",
            "timestamp": "1739832835",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "We absolutely are working and even more examples to support the maker/hobbyist community. For now, take a look at the VGA-based PONG game code example, which is something that would only fit on the larger Fipsy V2 board - https://www.fipsyfpga.com/learning/learning-projects/vga-pong/",
            "timestamp": "1739832835",
            "is_creator": true
        },
        {
            "poster": "Matthew Zamora",
            "comment": "We have other cool demos and surprises brewing, say stay tuned to the campaign updates for those!",
            "timestamp": "1739832835",
            "is_creator": true
        }
    ]
}